{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/product.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\nfunction OrderUpdateComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r1, \" \");\n  }\n}\nexport let OrderUpdateComponent = /*#__PURE__*/(() => {\n  class OrderUpdateComponent {\n    constructor(productService, sanitizer, activatedRoute) {\n      this.productService = productService;\n      this.sanitizer = sanitizer;\n      this.activatedRoute = activatedRoute;\n      this.isNewProduct = true;\n      this.orderStatusUpdateEnity = {\n        orderId: null,\n        status: \"\"\n      };\n      this.dataSource = [];\n    }\n    ngOnInit() {\n      // this.orderStatusUpdateEnity = this.activatedRoute.snapshot.data['product'];\n    }\n    addProduct(loginForm) {\n      //  // const productFormData = this.prepareFormData(this.orderStatusUpdate);\n      //  const orderProductStatus = this.prepareFormData(this.orderStatusUpdate);\n      //   this.productService.updateProductStatus(orderProductStatus).subscribe(\n      //     (response: OrderStatusUpdate)=>{\n      //       productForm.reset();\n      //      // this.orderStatusUpdate.productImages = [];\n      //     },\n      //     (error: HttpErrorResponse)=>{\n      //       console.log(error)\n      //     }\n      //     );\n      this.productService.updateProductStatus(loginForm.value).subscribe(resp => {\n        console.log(resp);\n        loginForm.reset();\n        // this.router.navigate([\"/orderConfirm\"])\n      }, err => {\n        console.log(err);\n      });\n    }\n    getCurrencies() {\n      this.productService.getAllOrderDetailsForAdmin().subscribe(resp => {\n        console.log(resp);\n        this.dataSource = resp;\n      }, error => {\n        console.log(error);\n      });\n    }\n    prepareFormData(product) {\n      const formData = new FormData();\n      formData.append('product', new Blob([JSON.stringify(product)], {\n        type: 'application/json'\n      }));\n      return formData;\n    }\n    static {\n      this.ɵfac = function OrderUpdateComponent_Factory(t) {\n        return new (t || OrderUpdateComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OrderUpdateComponent,\n        selectors: [[\"app-order-update\"]],\n        decls: 11,\n        vars: 1,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"p-2\"], [1, \"row\"], [1, \"col-6\"], [\"appearance\", \"fill\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n        template: function OrderUpdateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"mat-form-field\", 4)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Select an option\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-select\")(8, \"mat-option\");\n            i0.ɵɵtext(9, \"None\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, OrderUpdateComponent_mat_option_10_Template, 2, 2, \"mat-option\", 5);\n            i0.ɵɵelementEnd()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"ngForOf\", ctx.dataSource);\n          }\n        },\n        dependencies: [i4.NgForOf, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.MatOption],\n        styles: [\"mat-grid-tile[_ngcontent-%COMP%]{border:1px solid #eee}.btn-remove-image[_ngcontent-%COMP%]{position:absolute;cursor:pointer;top:-10px;right:-10px;background-color:red;color:#faebd7;border-radius:50%;width:20px;height:auto;text-align:center}.dropzone[_ngcontent-%COMP%]{height:150px;min-width:100px;display:table;background-color:#eee;width:300px;border:dashed 1px #aaa;border-radius:10px;margin-left:auto;margin-right:auto}.text-wrapper[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle}.center[_ngcontent-%COMP%]{text-align:center}\"]\n      });\n    }\n  }\n  return OrderUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}