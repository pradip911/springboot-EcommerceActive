{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nfunction CustomerCareComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const creature_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", creature_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\n\", creature_r3.viewValue, \"\\n\");\n  }\n}\nexport let CustomerCareComponent = /*#__PURE__*/(() => {\n  class CustomerCareComponent {\n    constructor(activatedRoute, productService, router) {\n      this.activatedRoute = activatedRoute;\n      this.productService = productService;\n      this.router = router;\n      this.isSingleProductCheckout = \"\";\n      this.priceReducerDerivation = \"\";\n      this.alertMessage = \"\";\n      this.productDetails = [];\n      this.customerCare = {\n        fullName: '',\n        fullAddress: '',\n        contactNumber: '',\n        alternateContactNumber: '',\n        orderProductQuantityList: []\n      };\n    }\n    ngOnInit() {\n      this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\n      this.isSingleProductCheckout = this.activatedRoute.snapshot.paramMap.get(\"isSingleProductCheckout\");\n      this.priceReducerDerivation = this.activatedRoute.snapshot.paramMap.get(\"priceReducerDerivation\");\n      //this.activatedRoute.snapshot.\n      this.productDetails.forEach(x => this.orderDetails.orderProductQuantityList.push({\n        productId: x.productId,\n        quantity: 1\n      }));\n      console.log(this.productDetails);\n      console.log(this.orderDetails);\n    }\n    placeOrder(orderForm) {\n      this.productService.placeOrder(this.orderDetails, this.isSingleProductCheckout).subscribe(resp => {\n        console.log(resp);\n        const result = resp;\n        console.log(result);\n        if (resp === 'Order could not be placed because availavle quantity is 0') {\n          console.log(result + \"Data\");\n          this.alertMessage = 'Order Can not be placed';\n          orderForm.reset();\n        }\n        orderForm.reset();\n        this.router.navigate([\"/orderConfirm\"]);\n      }, err => {\n        console.log(err);\n      });\n    }\n    getQuantityForProduct(productId) {\n      const filterProduct = this.orderDetails.orderProductQuantityList.filter(productQuantity => productQuantity.productId === productId);\n      return filterProduct[0].quantity;\n    }\n    getCalculatedTotal(productId, productDiscountedPrice) {\n      const filterProduct = this.orderDetails.orderProductQuantityList.filter(productQuantity => productQuantity.productId === productId);\n      return filterProduct[0].quantity * productDiscountedPrice;\n    }\n    onQuantityChanged(q, productId) {\n      this.orderDetails.orderProductQuantityList.filter(orderProduct => orderProduct.productId === productId)[0].quantity = q;\n    }\n    getCalculatedGrandTotal(priceReducerDerivation) {\n      let grandTotal = 0;\n      this.orderDetails.orderProductQuantityList.forEach(productQuantity => {\n        const price = this.productDetails.filter(product => product.productId === productQuantity.productId)[0].productDiscountedPrice;\n        var priceReducerDerivationAmount = parseInt(priceReducerDerivation);\n        const discountprice = productQuantity.quantity * priceReducerDerivationAmount;\n        grandTotal += price * productQuantity.quantity;\n        grandTotal = grandTotal - discountprice;\n      });\n      return grandTotal;\n    }\n    static {\n      this.ɵfac = function CustomerCareComponent_Factory(t) {\n        return new (t || CustomerCareComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CustomerCareComponent,\n        selectors: [[\"app-customer-care\"]],\n        decls: 28,\n        vars: 8,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"p-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"orderForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", \"placeholder\", \"Full Name\", \"name\", \"fullName\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Full address\", \"name\", \"fullAddress\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Contact number\", \"name\", \"contactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Alternate contact number\", \"name\", \"alternateContactNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"disableOptionCentering\", \"\", 3, \"ngModel\", \"required\", \"disabled\", \"ngModelChange\"], [\"pokemonControl\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"right\"], [\"type\", \"submit\", \"mat-stroked-button\", \"\", \"color\", \"primary\"], [3, \"value\"]],\n        template: function CustomerCareComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r4 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4, 5);\n            i0.ɵɵlistener(\"ngSubmit\", function CustomerCareComponent_Template_form_ngSubmit_4_listener() {\n              i0.ɵɵrestoreView(_r4);\n              const _r0 = i0.ɵɵreference(5);\n              return i0.ɵɵresetView(ctx.placeOrder(_r0));\n            });\n            i0.ɵɵelementStart(6, \"mat-form-field\", 6)(7, \"mat-label\");\n            i0.ɵɵtext(8, \"Full Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"input\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function CustomerCareComponent_Template_input_ngModelChange_9_listener($event) {\n              return ctx.orderDetails.fullName = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"mat-form-field\", 6)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Full address\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"input\", 8);\n            i0.ɵɵlistener(\"ngModelChange\", function CustomerCareComponent_Template_input_ngModelChange_13_listener($event) {\n              return ctx.orderDetails.fullAddress = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(14, \"mat-form-field\", 6)(15, \"mat-label\");\n            i0.ɵɵtext(16, \"Contact number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"input\", 9);\n            i0.ɵɵlistener(\"ngModelChange\", function CustomerCareComponent_Template_input_ngModelChange_17_listener($event) {\n              return ctx.orderDetails.contactNumber = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n            i0.ɵɵtext(20, \"Alternate contact number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"input\", 10);\n            i0.ɵɵlistener(\"ngModelChange\", function CustomerCareComponent_Template_input_ngModelChange_21_listener($event) {\n              return ctx.orderDetails.alternateContactNumber = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"mat-select\", 11, 12);\n            i0.ɵɵlistener(\"ngModelChange\", function CustomerCareComponent_Template_mat_select_ngModelChange_22_listener($event) {\n              return ctx.currentPokemon = $event;\n            });\n            i0.ɵɵtemplate(24, CustomerCareComponent_mat_option_24_Template, 2, 2, \"mat-option\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"div\", 14)(26, \"button\", 15);\n            i0.ɵɵtext(27, \"Place Order\");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullName);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.fullAddress);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.contactNumber);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.alternateContactNumber);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.currentPokemon)(\"required\", ctx.pokemonRequired)(\"disabled\", ctx.pokemonDisabled);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.pokemon);\n          }\n        },\n        dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatButton, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.MatSelect, i9.MatOption]\n      });\n    }\n  }\n  return CustomerCareComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}